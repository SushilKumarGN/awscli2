Creating High Availability Architecture with AWS CLI

The architecture includes-
- Webserver configured on EC2 Instance
- Document Root(/var/www/html) made
persistent by mounting on EBS Block Device.
- Static objects used in code such as
pictures stored in S3
- Setting up Content Delivery Network using
CloudFront and using the origin domain as S3 bucket.
- Finally place the Cloud Front URL on the
webapp code for security and low latency.

-> Command to create a key pair:

aws ec2 create-key-pair –key-name mykey111

-> Command to create security group:

aws ec2 create-security-group --group-name MyFirstSecurity --description mySGMS

-> Launching the instance: -

aws ec2 run-instances --image-id ami-0b49de02a583ae0de --count 1 --instancetype
t2.micro --key-name mykey111 --security-group-ids sg-0ff01b40e4e620ce1
--subnet-id subnet-003d0c6f34892cd9b

-> Create volume and attach it to instance: -

aws ec2 create-volume - -volume-type gp2 - -size 1 - -availability-zone ap south-1a

aws ec2 attach-volume –volume-id vol-026a05afaf706edbe - -instanceid
i-0e87e278192502f3b - -device /dev/sdf

-> Install  web server: -

yum install httpd

-> Create Partition: -

fdisk /dev/xvda

-> Format partition:-

mkfs.ext4 /dev/xvda1

-> Mount Partition:-

mount /dev/xvda2 /var/www/html

-> Creating a bucket and storing static data in it: -

aws s3 mb s3://sushil454

-> Creating a CloudFront: -

aws cloudfront create-distribution --origin-domain-name
sushil454.s3.amazonaws.com --default-root-object rocket.jpeg

-> For accessing image create a html file and put this link:

cd var/www/html

vi rocketaws.html

-> Starting the service: -

systemctl start httpd

systemctl status httpd

-> Final Output:-

(url) https://(name of bucket).(region-name).amazonaws.com/(image-name).jpg




Note:- Reference link for above steps https://1drv.ms/w/s!ArbkgUQgmpWjhGGbiExRLT7RQhui?e=yKhwbL  
